@echo off
setlocal enabledelayedexpansion

:: Default output directory
set DEFAULT_OUTPUT_DIR=Server\Src\Main\Reactor\Builders\Tables\Generated

:convert_to_pascal_case
setlocal enabledelayedexpansion
set "str=%~1"
set "result="
for %%A in (%str:_= %) do (
    set "word=%%A"
    set "first=!word:~0,1!"
    set "rest=!word:~1!"
    set "result=!result!!first!!rest!"
)
endlocal & set "%~2=%result%"
goto :eof

:: Configuration file
set CONFIG_FILE=Server\Src\Main\Infrastructure\Configuration\application.Development.json
if not exist "%CONFIG_FILE%" (
    echo Error: Configuration file %CONFIG_FILE% not found.
    exit /b 1
)

:: Extract DB connection string using PowerShell
for /f "delims=" %%i in ('powershell -command "(Get-Content %CONFIG_FILE% | Out-String) -replace '\"','\\\"' | ConvertFrom-Json | Select-Object -ExpandProperty ConnectionStrings | Select-Object -ExpandProperty FinanceDatabase"') do set DB_CONNECTION=%%i

if "%DB_CONNECTION%"=="" (
    echo Error: DB_CONNECTION not found in %CONFIG_FILE%.
    exit /b 1
)

:: Extract DB connection details
for /f "tokens=2 delims=;" %%i in ('echo %DB_CONNECTION% ^| findstr /i "host="') do set DB_HOST=%%i
for /f "tokens=2 delims=;" %%i in ('echo %DB_CONNECTION% ^| findstr /i "port="') do set DB_PORT=%%i
for /f "tokens=2 delims=;" %%i in ('echo %DB_CONNECTION% ^| findstr /i "user="') do set DB_USER=%%i
for /f "tokens=2 delims=;" %%i in ('echo %DB_CONNECTION% ^| findstr /i "password="') do set DB_PASS=%%i
for /f "tokens=2 delims=;" %%i in ('echo %DB_CONNECTION% ^| findstr /i "database="') do set DB_NAME=%%i

:: Test database connection
mysql -h "%DB_HOST%" -P "%DB_PORT%" -u "%DB_USER%" -p"%DB_PASS%" -D "%DB_NAME%" -e "exit"
if errorlevel 1 (
    echo Error: Unable to connect to MariaDB database. Check your connection string.
    exit /b 1
)

echo Fetching table list from the database...
for /f "delims=" %%i in ('mysql -h "%DB_HOST%" -P "%DB_PORT%" -u "%DB_USER%" -p"%DB_PASS%" -D "%DB_NAME%" -se "SHOW TABLES;"') do (
    set TABLES=!TABLES! %%i
)

if "%TABLES%"=="" (
    echo Error: No tables found in the database or unable to fetch tables.
    exit /b 1
)

echo Available Tables:
echo %TABLES% | for /f "tokens=*" %%i in ('findstr /n /r "^"') do echo %%i

set /p SELECTED_TABLE=Enter a specific table number (or table name) to generate (or press Enter to generate all):

set /p CUSTOM_OUTPUT_DIR=Enter custom output directory (default: %DEFAULT_OUTPUT_DIR%):
if not "%CUSTOM_OUTPUT_DIR%"=="" (
    set OUTPUT_DIR=%CUSTOM_OUTPUT_DIR%
) else (
    set OUTPUT_DIR=%DEFAULT_OUTPUT_DIR%
)

if not exist "%OUTPUT_DIR%" (
    echo Error: Output directory %OUTPUT_DIR% does not exist.
    exit /b 1
)

if "%SELECTED_TABLE%"=="" (
    set SELECTED_TABLES=%TABLES%
) else if "%SELECTED_TABLE%" lss "0" (
    set SELECTED_TABLES=!TABLES:%SELECTED_TABLE%=!
    if "%SELECTED_TABLES%"=="" (
        echo Error: Table number '%SELECTED_TABLE%' not found in the database.
        exit /b 1
    )
) else (
    echo %TABLES% | findstr /i /w "%SELECTED_TABLE%" >nul
    if errorlevel 1 (
        echo Error: Table '%SELECTED_TABLE%' not found in the database.
        exit /b 1
    )
    set SELECTED_TABLES=%SELECTED_TABLE%
)

for %%T in (%SELECTED_TABLES%) do (
    call :convert_to_pascal_case %%T CLASS_NAME
    set CLASS_FILE=%OUTPUT_DIR%\!CLASS_NAME!Table.cs

    for /f "delims=" %%i in ('mysql -h "%DB_HOST%" -P "%DB_PORT%" -u "%DB_USER%" -p"%DB_PASS%" -D "%DB_NAME%" -se "DESCRIBE %%T;"') do (
        set COLUMNS=!COLUMNS! %%i
    )

    if "%COLUMNS%"=="" (
        echo Error: Unable to fetch columns for table %%T.
        goto :continue
    )

    (
    echo //------------------------------------------------------------------------------
    echo // <auto-generated>
    echo //     This code was auto-generated by a script.
    echo //     Changes to this file may cause incorrect behavior and will be lost
    echo //     if the code is regenerated.
    echo //     Generated on: %date%
    echo // </auto-generated>
    echo //------------------------------------------------------------------------------
    echo.
    echo using System;
    echo.
    echo namespace Src.Main.Reactor.Builders.Tables.Generated
    echo {
    echo     /// <summary>
    echo     /// Static class representing the %%T table in the database.
    echo     /// </summary>
    echo     public static class !CLASS_NAME!Table
    echo     {
    echo         /// <summary>
    echo         /// The name of the database table.
    echo         /// </summary>
    echo         public const string TableName = "%%T";
    ) > "%CLASS_FILE%"

    for %%C in (%COLUMNS%) do (
        for /f "tokens=1,2" %%a in ("%%C") do (
            call :convert_to_pascal_case %%a COLUMN_CONST
            (
            echo         /// <summary>
            echo         /// Column: %%a
            echo         /// Type: %%b
            echo         /// </summary>
            echo         public const string !COLUMN_CONST! = "%%a";
            ) >> "%CLASS_FILE%"
        )
    )

    (
    echo     }
    echo }
    ) >> "%CLASS_FILE%"

    echo Class file created: %CLASS_FILE%

    :continue
)

endlocal
